Prompt for Replit: Responsive Real Estate Investment App

Project Overview

Build a responsive real estate investment app using React.js with TailwindCSS for styling. The app allows users to log in via OTP, choose a real estate project, select an investment model, choose the number of shares, and proceed with the payment. The app should also maintain a user profile with existing investments.

⸻

Features & Functionalities

1. User Authentication
	•	Users sign up/log in with a mobile number.
	•	OTP verification is required for authentication (Mock OTP flow for now).
	•	After login, users must enter their name and create their profile.

2. Dashboard
	•	Users land on a dashboard after login.
	•	Option to “Start New Investment”.

3. Project Selection
	•	Show 2 real estate projects to invest in:
	•	Project: Aura
	•	Codename: Aura
	•	Location: Bangalore
	•	Minimum Investment: ₹1 Lakh
	•	Estimated Returns: 14% p.a.
	•	Lock-in Period: 3 years
	•	Project: Subha White Waters
	•	Location: Bangalore
	•	Minimum Investment: ₹1.5 Lakh
	•	Estimated Returns: 16% p.a.
	•	Lock-in Period: 4 years

4. Investment Model Selection
	•	Each project has three fixed investment models:
	1.	Gold Investment Model
	•	Min Investment: ₹1L
	•	ROI: 12%
	•	Lock-in Period: 3 years
	•	Slots Available: 5
	2.	Platinum Investment Model
	•	Min Investment: ₹1L
	•	ROI: 14%
	•	Lock-in Period: 4 years
	•	Slots Available: 3
	3.	Virtual Investment Model
	•	Min Investment: ₹1L
	•	ROI: 10%
	•	Lock-in Period: 2 years
	•	Slots Available: 10

5. Slot Selection
	•	Users choose how many shares they want to buy (1, 2, 3, etc.).
	•	The total investment amount is auto-calculated.

6. Payment Process
	•	Users choose “Pay Now” or “Invest Later”.
	•	Payment is integrated via Razorpay/Stripe (Mock API for now).

7. User Profile
	•	Display:
	•	User details (Name, Mobile Number)
	•	Investment history (Projects invested in, returns, status)
	•	Ongoing investments with details

⸻

Tech Stack
	•	Frontend: React.js (Vite) with TailwindCSS
	•	State Management: Context API or Redux
	•	Authentication: Firebase/Auth0 (Mock OTP flow)
	•	Payment Gateway: Razorpay/Stripe (Mock payment)
	•	Backend (Optional for persistence): Firebase or Express.js with MongoDB

⸻

Additional Features
	•	Mobile Responsive UI with a clean design
	•	Error handling for authentication, selection, and payments
	•	Loading states & skeleton screens for a smooth experience
	•	Dark Mode Support (Optional)

⸻

Final Output

A fully responsive React app that allows users to log in, choose a real estate project, select an investment model, buy slots, make payments, and track investments.